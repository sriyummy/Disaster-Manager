<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='DisasterManagementDashboard_17396455184750' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='requests_data Extract' inline='true' name='federated.071q3qy1nnffyi1glx17j00ph2yy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='requests_data' name='hyper.1v158kl1i7a8cs14trgll0m9oh7q'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/KIIT/Documents/Personal Projects/Diasaster Manager/requests_data.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.1v158kl1i7a8cs14trgll0m9oh7q' name='RequestData' table='[Extract].[RequestData]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.1v158kl1i7a8cs14trgll0m9oh7q' name='RequestData' table='[Extract].[RequestData]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_id]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>severity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[severity]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>severity</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[startDate]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>startDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>134</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>affectedAreas</remote-name>
            <remote-type>129</remote-type>
            <local-name>[affectedAreas]</local-name>
            <parent-name>[RequestData]</parent-name>
            <remote-alias>affectedAreas</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_3656359994950299648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Food = IF CONTAINS([Needs], &apos;Food&apos;) THEN 1 ELSE 0 END&#13;&#10;Water = IF CONTAINS([Needs], &apos;Water&apos;) THEN 1 ELSE 0 END&#13;&#10;Shelter = IF CONTAINS([Needs], &apos;Shelter&apos;) THEN 1 ELSE 0 END&#13;&#10;Medical Aid = IF CONTAINS([Needs], &apos;Medical Aid&apos;) THEN 1 ELSE 0 END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='RequestData' datatype='table' name='[__tableau_internal_object_id__].[RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2]' role='measure' type='quantitative' />
      <column caption='_Id' datatype='string' name='[_id]' role='dimension' type='nominal' />
      <column caption='Affected Areas' datatype='string' name='[affectedAreas]' role='dimension' type='nominal' />
      <column caption='Description - Split 1' datatype='string' name='[description - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.071q3qy1nnffyi1glx17j00ph2yy].[description]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [description], &quot;Needs&quot;, 2 ), &quot;:&quot;, 2 ), &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Description - Split 2' datatype='string' name='[description - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.071q3qy1nnffyi1glx17j00ph2yy].[description]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [description], &quot;Needs&quot;, 2 ), &quot;:&quot;, 2 ), &quot;,&quot;, 2 ) )' />
      </column>
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Severity' datatype='real' name='[severity]' role='measure' type='quantitative' />
      <column caption='Start Date' datatype='datetime' name='[startDate]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='RequestData' id='RequestData (Extract.RequestData)_CDD3CB4B9FD8406095942C69575B8BF2'>
            <properties context=''>
              <relation connection='hyper.1v158kl1i7a8cs14trgll0m9oh7q' name='RequestData' table='[Extract].[RequestData]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='requests_data Extract' name='federated.071q3qy1nnffyi1glx17j00ph2yy' />
          </datasources>
          <datasource-dependencies datasource='federated.071q3qy1nnffyi1glx17j00ph2yy'>
            <column caption='Description - Split 1' datatype='string' name='[description - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.071q3qy1nnffyi1glx17j00ph2yy].[description]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [description], &quot;Needs&quot;, 2 ), &quot;:&quot;, 2 ), &quot;,&quot;, 1 ) )' />
            </column>
            <column caption='Description - Split 2' datatype='string' name='[description - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.071q3qy1nnffyi1glx17j00ph2yy].[description]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [description], &quot;Needs&quot;, 2 ), &quot;:&quot;, 2 ), &quot;,&quot;, 2 ) )' />
            </column>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[description - Split 1]' derivation='None' name='[none:description - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[description - Split 2]' derivation='None' name='[none:description - Split 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[startDate]' derivation='Second' name='[sc:startDate:ok]' pivot='key' type='ordinal' />
            <column caption='Severity' datatype='real' name='[severity]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[startDate]' role='dimension' type='ordinal' />
            <column-instance column='[severity]' derivation='Sum' name='[sum:severity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.071q3qy1nnffyi1glx17j00ph2yy].[sc:startDate:ok] / ([federated.071q3qy1nnffyi1glx17j00ph2yy].[none:description - Split 1:nk] / [federated.071q3qy1nnffyi1glx17j00ph2yy].[none:description - Split 2:nk]))</rows>
        <cols>[federated.071q3qy1nnffyi1glx17j00ph2yy].[sum:severity:qk]</cols>
      </table>
      <simple-id uuid='{3391E735-C13D-4A78-B32F-8868608AD87B}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:_id:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:affectedAreas:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:description - Split 1:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:description - Split 2:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:description:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:name:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[none:type:nk]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[qr:startDate:ok]</field>
            <field>[federated.071q3qy1nnffyi1glx17j00ph2yy].[yr:startDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECD19AD5-9DFC-4172-8EC9-FC37638A9ABA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
